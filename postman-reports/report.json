{
  "collection": {
    "_": {
      "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
      "exporter_id": "49430881",
      "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
    },
    "item": [
      {
        "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
        "name": "New Request",
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                "\r",
                "const json = pm.response.json();\r",
                "\r",
                "pm.test(\"Token present\", () => {\r",
                "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                "});\r",
                "\r",
                "// Save token for other requests\r",
                "pm.environment.set(\"token\", json.token);\r",
                "\r",
                "// Optional performance check\r",
                "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                ""
              ],
              "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
            }
          }
        ]
      },
      {
        "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
        "name": "New Request",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                "const body = pm.response.json();\r",
                "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                ""
              ],
              "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
            }
          }
        ]
      },
      {
        "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
        "name": "New Request",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Created (201) or OK (200)\", () => {\r",
                "  pm.expect([200,201]).to.include(pm.response.code);\r",
                "});\r",
                "const j = pm.response.json();\r",
                "pm.test(\"Has id & title\", () => {\r",
                "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
            }
          }
        ]
      },
      {
        "id": "926969e4-efd4-433c-9df1-841b389225ae",
        "name": "New Request",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                "const j = pm.response.json();\r",
                "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                ""
              ],
              "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
            }
          }
        ]
      },
      {
        "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
        "name": "New Request",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                ""
              ],
              "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
            }
          }
        ]
      }
    ],
    "auth": {
      "type": "bearer",
      "bearer": [
        {
          "type": "string",
          "value": "{{token}}",
          "key": "token"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
      "name": "Rails API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-10-28T19:46:59.373Z",
      "postman_exported_using": "Postman/11.69.1-251028-0111"
    },
    "id": "4eae1ee3-0990-44c9-9448-e1352a524616",
    "name": "rails local",
    "values": [
      {
        "type": "any",
        "value": "",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "",
        "key": "email"
      },
      {
        "type": "any",
        "value": "",
        "key": "password"
      },
      {
        "type": "any",
        "value": null,
        "key": "token"
      }
    ]
  },
  "globals": {
    "id": "39a16507-3e70-4167-b081-d530f115e36b",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 15,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 5,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 7,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 10,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 82,
      "responseMin": 82,
      "responseMax": 82,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1761682620285,
      "completed": 1761682620650
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "067e19db-d69b-4256-90d8-4066453f5a96",
          "httpRequestId": "4ea1a04c-da95-49b4-b3f5-5dc4b272a579"
        },
        "item": {
          "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
          "name": "New Request",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "\r",
                  "const json = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Token present\", () => {\r",
                  "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                  "});\r",
                  "\r",
                  "// Save token for other requests\r",
                  "pm.environment.set(\"token\", json.token);\r",
                  "\r",
                  "// Optional performance check\r",
                  "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "efa98722-8270-455e-814d-4a02aa68e1d3",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 40,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "93fc4dfe-8781-4d9a-b0cf-b6811f797374",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "content-type",
              "value": "application/json; charset=UTF-8"
            },
            {
              "key": "x-request-id",
              "value": "feddc935-1208-45e9-b59d-0246b74e43b0"
            },
            {
              "key": "x-runtime",
              "value": "0.060066"
            },
            {
              "key": "server-timing",
              "value": ""
            },
            {
              "key": "content-length",
              "value": "6289"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              52,
              48,
              52,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              35,
              92,
              117,
              48,
              48,
              51,
              99,
              65,
              99,
              116,
              105,
              111,
              110,
              67,
              111,
              110,
              116,
              114,
              111,
              108,
              108,
              101,
              114,
              58,
              58,
              82,
              111,
              117,
              116,
              105,
              110,
              103,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              78,
              111,
              32,
              114,
              111,
              117,
              116,
              101,
              32,
              109,
              97,
              116,
              99,
              104,
              101,
              115,
              32,
              91,
              80,
              79,
              83,
              84,
              93,
              32,
              92,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              97,
              117,
              116,
              104,
              47,
              108,
              111,
              103,
              105,
              110,
              92,
              34,
              92,
              117,
              48,
              48,
              51,
              101,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              115,
              34,
              58,
              123,
              34,
              65,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              84,
              114,
              97,
              99,
              101,
              34,
              58,
              91,
              93,
              44,
              34,
              70,
              114,
              97,
              109,
              101,
              119,
              111,
              114,
              107,
              32,
              84,
              114,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              100,
              101,
              98,
              117,
              103,
              95,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              46,
              114,
              98,
              58,
              51,
              53,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              68,
              101,
              98,
              117,
              103,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              104,
              111,
              119,
              95,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              46,
              114,
              98,
              58,
              51,
              50,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              104,
              111,
              119,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              114,
              97,
              99,
              107,
              47,
              108,
              111,
              103,
              103,
              101,
              114,
              46,
              114,
              98,
              58,
              52,
              49,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              82,
              97,
              99,
              107,
              58,
              58,
              76,
              111,
              103,
              103,
              101,
              114,
              35,
              99,
              97,
              108,
              108,
              95,
              97,
              112,
              112,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              114,
              97,
              99,
              107,
              47,
              108,
              111,
              103,
              103,
              101,
              114,
              46,
              114,
              98,
              58,
              50,
              57,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              82,
              97,
              99,
              107,
              58,
              58,
              76,
              111,
              103,
              103,
              101,
              114,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              114,
              101,
              109,
              111,
              116,
              101,
              95,
              105,
              112,
              46,
              114,
              98,
              58,
              57,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              82,
              101,
              109,
              111,
              116,
              101,
              73,
              112,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              53,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              105,
              100,
              46,
              114,
              98,
              58,
              51,
              52,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              99,
              107,
              32,
              40,
              51,
              46,
              50,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              99,
              107,
              47,
              114,
              117,
              110,
              116,
              105,
              109,
              101,
              46,
              114,
              98,
              58,
              50,
              52,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              99,
              107,
              58,
              58,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              54,
              49,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              50,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              58,
              58,
              83,
              117,
              98,
              115,
              99,
              114,
              105,
              98,
              101,
              114,
              35,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              95,
              101,
              118,
              101,
              110,
              116,
              115,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              54,
              48,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              101,
              120,
              101,
              99,
              117,
              116,
              111,
              114,
              46,
              114,
              98,
              58,
              49,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              69,
              120,
              101,
              99,
              117,
              116,
              111,
              114,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              116,
              97,
              116,
              105,
              99,
              46,
              114,
              98,
              58,
              50,
              55,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              116,
              97,
              116,
              105,
              99,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              99,
              107,
              32,
              40,
              51,
              46,
              50,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              99,
              107,
              47,
              115,
              101,
              110,
              100,
              102,
              105,
              108,
              101,
              46,
              114,
              98,
              58,
              49,
              51,
              49,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              99,
              107,
              58,
              58,
              83,
              101,
              110,
              100,
              102,
              105,
              108,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              104,
              111,
              115,
              116,
              95,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              46,
              114,
              98,
              58,
              49,
              52,
              51,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              72,
              111,
              115,
              116,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              52,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              101,
              110,
              103,
              105,
              110,
              101,
              46,
              114,
              98,
              58,
              53,
              51,
              53,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              69,
              110,
              103,
              105,
              110,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              53,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              46,
              114,
              98,
              58,
              51,
              48,
              48,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              58,
              58,
              67,
              111,
              110,
              102,
              105,
              103,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              54,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              114,
              98,
              58,
              49,
              48,
              49,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              35,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              55,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              116,
              104,
              114,
              101,
              97,
              100,
              95,
              112,
              111,
              111,
              108,
              46,
              114,
              98,
              58,
              51,
              53,
              53,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              84,
              104,
              114,
              101,
              97,
              100,
              80,
              111,
              111,
              108,
              35,
              119,
              105,
              116,
              104,
              95,
              102,
              111,
              114,
              99,
              101,
              95,
              115,
              104,
              117,
              116,
              100,
              111,
              119,
              110,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              56,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              114,
              98,
              58,
              49,
              48,
              48,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              35,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              57,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              46,
              114,
              98,
              58,
              53,
              48,
              51,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              35,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              99,
              108,
              105,
              101,
              110,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              46,
              114,
              98,
              58,
              50,
              54,
              50,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              35,
              114,
              117,
              110,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              116,
              104,
              114,
              101,
              97,
              100,
              95,
              112,
              111,
              111,
              108,
              46,
              114,
              98,
              58,
              49,
              56,
              50,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              84,
              104,
              114,
              101,
              97,
              100,
              80,
              111,
              111,
              108,
              35,
              115,
              112,
              97,
              119,
              110,
              95,
              116,
              104,
              114,
              101,
              97,
              100,
              39,
              34,
              125,
              93,
              44,
              34,
              70,
              117,
              108,
              108,
              32,
              84,
              114,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              100,
              101,
              98,
              117,
              103,
              95,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              46,
              114,
              98,
              58,
              51,
              53,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              68,
              101,
              98,
              117,
              103,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              104,
              111,
              119,
              95,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              46,
              114,
              98,
              58,
              51,
              50,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              104,
              111,
              119,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              114,
              97,
              99,
              107,
              47,
              108,
              111,
              103,
              103,
              101,
              114,
              46,
              114,
              98,
              58,
              52,
              49,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              82,
              97,
              99,
              107,
              58,
              58,
              76,
              111,
              103,
              103,
              101,
              114,
              35,
              99,
              97,
              108,
              108,
              95,
              97,
              112,
              112,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              114,
              97,
              99,
              107,
              47,
              108,
              111,
              103,
              103,
              101,
              114,
              46,
              114,
              98,
              58,
              50,
              57,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              82,
              97,
              99,
              107,
              58,
              58,
              76,
              111,
              103,
              103,
              101,
              114,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              114,
              101,
              109,
              111,
              116,
              101,
              95,
              105,
              112,
              46,
              114,
              98,
              58,
              57,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              82,
              101,
              109,
              111,
              116,
              101,
              73,
              112,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              53,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              105,
              100,
              46,
              114,
              98,
              58,
              51,
              52,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              73,
              100,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              99,
              107,
              32,
              40,
              51,
              46,
              50,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              99,
              107,
              47,
              114,
              117,
              110,
              116,
              105,
              109,
              101,
              46,
              114,
              98,
              58,
              50,
              52,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              99,
              107,
              58,
              58,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              54,
              49,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              50,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              58,
              58,
              83,
              117,
              98,
              115,
              99,
              114,
              105,
              98,
              101,
              114,
              35,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              95,
              101,
              118,
              101,
              110,
              116,
              115,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              95,
              116,
              105,
              109,
              105,
              110,
              103,
              46,
              114,
              98,
              58,
              54,
              48,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              84,
              105,
              109,
              105,
              110,
              103,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              101,
              120,
              101,
              99,
              117,
              116,
              111,
              114,
              46,
              114,
              98,
              58,
              49,
              54,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              69,
              120,
              101,
              99,
              117,
              116,
              111,
              114,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              115,
              116,
              97,
              116,
              105,
              99,
              46,
              114,
              98,
              58,
              50,
              55,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              83,
              116,
              97,
              116,
              105,
              99,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              99,
              107,
              32,
              40,
              51,
              46,
              50,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              99,
              107,
              47,
              115,
              101,
              110,
              100,
              102,
              105,
              108,
              101,
              46,
              114,
              98,
              58,
              49,
              51,
              49,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              99,
              107,
              58,
              58,
              83,
              101,
              110,
              100,
              102,
              105,
              108,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              112,
              97,
              99,
              107,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              97,
              99,
              116,
              105,
              111,
              110,
              95,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              47,
              104,
              111,
              115,
              116,
              95,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              46,
              114,
              98,
              58,
              49,
              52,
              51,
              58,
              105,
              110,
              32,
              39,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              58,
              58,
              72,
              111,
              115,
              116,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              52,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              114,
              97,
              105,
              108,
              116,
              105,
              101,
              115,
              32,
              40,
              56,
              46,
              48,
              46,
              51,
              41,
              32,
              108,
              105,
              98,
              47,
              114,
              97,
              105,
              108,
              115,
              47,
              101,
              110,
              103,
              105,
              110,
              101,
              46,
              114,
              98,
              58,
              53,
              51,
              53,
              58,
              105,
              110,
              32,
              39,
              82,
              97,
              105,
              108,
              115,
              58,
              58,
              69,
              110,
              103,
              105,
              110,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              53,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              46,
              114,
              98,
              58,
              51,
              48,
              48,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              58,
              58,
              67,
              111,
              110,
              102,
              105,
              103,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              35,
              99,
              97,
              108,
              108,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              54,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              114,
              98,
              58,
              49,
              48,
              49,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              35,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              55,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              116,
              104,
              114,
              101,
              97,
              100,
              95,
              112,
              111,
              111,
              108,
              46,
              114,
              98,
              58,
              51,
              53,
              53,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              84,
              104,
              114,
              101,
              97,
              100,
              80,
              111,
              111,
              108,
              35,
              119,
              105,
              116,
              104,
              95,
              102,
              111,
              114,
              99,
              101,
              95,
              115,
              104,
              117,
              116,
              100,
              111,
              119,
              110,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              56,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              114,
              98,
              58,
              49,
              48,
              48,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              35,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              57,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              46,
              114,
              98,
              58,
              53,
              48,
              51,
              58,
              105,
              110,
              32,
              39,
              80,
              117,
              109,
              97,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              35,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              99,
              108,
              105,
              101,
              110,
              116,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              46,
              114,
              98,
              58,
              50,
              54,
              50,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              83,
              101,
              114,
              118,
              101,
              114,
              35,
              114,
              117,
              110,
              39,
              34,
              125,
              44,
              123,
              34,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              49,
              48,
              55,
              50,
              56,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              49,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              34,
              58,
              34,
              112,
              117,
              109,
              97,
              32,
              40,
              55,
              46,
              49,
              46,
              48,
              41,
              32,
              108,
              105,
              98,
              47,
              112,
              117,
              109,
              97,
              47,
              116,
              104,
              114,
              101,
              97,
              100,
              95,
              112,
              111,
              111,
              108,
              46,
              114,
              98,
              58,
              49,
              56,
              50,
              58,
              105,
              110,
              32,
              39,
              98,
              108,
              111,
              99,
              107,
              32,
              105,
              110,
              32,
              80,
              117,
              109,
              97,
              58,
              58,
              84,
              104,
              114,
              101,
              97,
              100,
              80,
              111,
              111,
              108,
              35,
              115,
              112,
              97,
              119,
              110,
              95,
              116,
              104,
              114,
              101,
              97,
              100,
              39,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 6289
        },
        "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
        "assertions": [
          {
            "assertion": "Status is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Token present",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Token present",
              "message": "expected undefined to be a string",
              "stack": "AssertionError: expected undefined to be a string\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Response < 800ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "89c44e64-f944-4d18-a2d9-7e64c6cfb0b0",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7971990-c47b-43a3-8538-d923f445168c"
        },
        "item": {
          "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "const body = pm.response.json();\r",
                  "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                  "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c2111f69-3440-42b5-a677-2db4c3be9219",
              "system": true
            },
            {
              "key": "Host",
              "value": "",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Status is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "3ff05711-2810-4624-8d14-fafd3b0ac185",
              "timestamp": 1761682620476,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "63dbdc48-42dd-4fa2-9df9-b2b14569cc1f",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a31ddc2-be45-4a8f-b1de-1dc27f1ff58b"
        },
        "item": {
          "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Created (201) or OK (200)\", () => {\r",
                  "  pm.expect([200,201]).to.include(pm.response.code);\r",
                  "});\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has id & title\", () => {\r",
                  "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ea4375ce-dc8f-4904-94a2-a69024a5a6c7",
              "system": true
            },
            {
              "key": "Host",
              "value": "",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Created (201) or OK (200)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Created (201) or OK (200)",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "c3e949fa-81d6-49a7-8e6d-2ae7fc420ca8",
              "timestamp": 1761682620529,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f378b41a-b0e8-48f2-ad81-8c2b37d21a93",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647a6b62-01de-4e7e-91a6-bc7c2fdf59b5"
        },
        "item": {
          "id": "926969e4-efd4-433c-9df1-841b389225ae",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                  ""
                ],
                "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a932bed5-0dba-46a6-8a80-d8a59da08a5e",
              "system": true
            },
            {
              "key": "Host",
              "value": "",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "926969e4-efd4-433c-9df1-841b389225ae",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Unauthorized (401)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Unauthorized (401)",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "\"undefined\" is not valid JSON",
              "checksum": "4db15f4d7d3ae61b799898db95379b99",
              "id": "3a650b46-d288-458a-af3d-12faab43e130",
              "timestamp": 1761682620582,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4490854a-db3e-426a-a70e-7dcb23467637",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bb47000c-9f57-4336-be3a-1838f7964736"
        },
        "item": {
          "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  ""
                ],
                "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "articles"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5ae92e06-51a8-419e-a3f5-8fdad05d2e32",
              "system": true
            },
            {
              "key": "Host",
              "value": "",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Unauthorized (401)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Unauthorized (401)",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 6289
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "e25195a84a7c9c4b797f686bba497c51",
          "id": "57633d68-bb07-4a06-a18c-2e5cf0b3ef9b",
          "timestamp": 1761682620424,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
          "name": "New Request",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "\r",
                  "const json = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Token present\", () => {\r",
                  "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                  "});\r",
                  "\r",
                  "// Save token for other requests\r",
                  "pm.environment.set(\"token\", json.token);\r",
                  "\r",
                  "// Optional performance check\r",
                  "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "067e19db-d69b-4256-90d8-4066453f5a96",
          "httpRequestId": "4ea1a04c-da95-49b4-b3f5-5dc4b272a579",
          "scriptId": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
          "execution": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Token present",
          "message": "expected undefined to be a string",
          "stack": "AssertionError: expected undefined to be a string\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "7c542a9bf55c7320b28a05ba979f5c88",
          "id": "969aeb21-83d0-414d-8f00-7940eb6972a5",
          "timestamp": 1761682620426,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
          "name": "New Request",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3000",
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "\r",
                  "const json = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Token present\", () => {\r",
                  "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                  "});\r",
                  "\r",
                  "// Save token for other requests\r",
                  "pm.environment.set(\"token\", json.token);\r",
                  "\r",
                  "// Optional performance check\r",
                  "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "067e19db-d69b-4256-90d8-4066453f5a96",
          "httpRequestId": "4ea1a04c-da95-49b4-b3f5-5dc4b272a579",
          "scriptId": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
          "execution": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///api/v1/articles\"",
          "stack": "Error: Invalid URI \"http:///api/v1/articles\"\n    at Request.init (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:356:31)\n    at new Request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:183:8)\n    at request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js:47:10)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:84:23\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:473:16\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5329:29)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setCertificate (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:50:20)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:79:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5331:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setProxy (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:31:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:76:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at Object.waterfall (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5334:5)",
          "checksum": "94d1d8fc2a13759def99233cc88e6397",
          "id": "e2ed6954-0732-448c-8459-5ccd42f6429d",
          "timestamp": 1761682620458,
          "stacktrace": [
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 356,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 183,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 84,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 50,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 79,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 31,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 76,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "const body = pm.response.json();\r",
                  "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                  "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "89c44e64-f944-4d18-a2d9-7e64c6cfb0b0",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7971990-c47b-43a3-8538-d923f445168c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "91138a28409fb394409e7931e7a71181",
          "id": "6a6ff3e3-b1d7-4e77-9e00-f87b178df048",
          "timestamp": 1761682620474,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "const body = pm.response.json();\r",
                  "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                  "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "89c44e64-f944-4d18-a2d9-7e64c6cfb0b0",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7971990-c47b-43a3-8538-d923f445168c",
          "scriptId": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
          "execution": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "3ff05711-2810-4624-8d14-fafd3b0ac185",
          "timestamp": 1761682620476,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                  "const body = pm.response.json();\r",
                  "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                  "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                  ""
                ],
                "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "89c44e64-f944-4d18-a2d9-7e64c6cfb0b0",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7971990-c47b-43a3-8538-d923f445168c",
          "scriptId": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///api/v1/articles\"",
          "stack": "Error: Invalid URI \"http:///api/v1/articles\"\n    at Request.init (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:356:31)\n    at new Request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:183:8)\n    at request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js:47:10)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:84:23\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:473:16\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5329:29)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setCertificate (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:50:20)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:79:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5331:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setProxy (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:31:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:76:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at Object.waterfall (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5334:5)",
          "checksum": "94d1d8fc2a13759def99233cc88e6397",
          "id": "2562529a-ab38-4921-b9ed-a7bd23284a87",
          "timestamp": 1761682620512,
          "stacktrace": [
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 356,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 183,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 84,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 50,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 79,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 31,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 76,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Created (201) or OK (200)\", () => {\r",
                  "  pm.expect([200,201]).to.include(pm.response.code);\r",
                  "});\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has id & title\", () => {\r",
                  "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "63dbdc48-42dd-4fa2-9df9-b2b14569cc1f",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a31ddc2-be45-4a8f-b1de-1dc27f1ff58b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Created (201) or OK (200)",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "5d14889fb7245330cf2a8df9554ea771",
          "id": "8872b521-cebd-49e9-9cc6-09b1a646df67",
          "timestamp": 1761682620527,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Created (201) or OK (200)\", () => {\r",
                  "  pm.expect([200,201]).to.include(pm.response.code);\r",
                  "});\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has id & title\", () => {\r",
                  "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "63dbdc48-42dd-4fa2-9df9-b2b14569cc1f",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a31ddc2-be45-4a8f-b1de-1dc27f1ff58b",
          "scriptId": "b6bef938-0829-4b38-a834-a7503d26bdec",
          "execution": "f11d5598-b6ea-449a-9925-ca5aef880068"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "c3e949fa-81d6-49a7-8e6d-2ae7fc420ca8",
          "timestamp": 1761682620529,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Created (201) or OK (200)\", () => {\r",
                  "  pm.expect([200,201]).to.include(pm.response.code);\r",
                  "});\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has id & title\", () => {\r",
                  "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "63dbdc48-42dd-4fa2-9df9-b2b14569cc1f",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9a31ddc2-be45-4a8f-b1de-1dc27f1ff58b",
          "scriptId": "b6bef938-0829-4b38-a834-a7503d26bdec"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///api/v1/auth/login\"",
          "stack": "Error: Invalid URI \"http:///api/v1/auth/login\"\n    at Request.init (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:356:31)\n    at new Request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:183:8)\n    at request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js:47:10)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:84:23\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:473:16\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5329:29)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setCertificate (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:50:20)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:79:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5331:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setProxy (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:31:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:76:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at Object.waterfall (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5334:5)",
          "checksum": "eee17d15decb197b16cb374463739e1d",
          "id": "9b828207-9cfc-4b97-8616-ea6b748ca0cb",
          "timestamp": 1761682620567,
          "stacktrace": [
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 356,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 183,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 84,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 50,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 79,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 31,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 76,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "926969e4-efd4-433c-9df1-841b389225ae",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                  ""
                ],
                "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f378b41a-b0e8-48f2-ad81-8c2b37d21a93",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647a6b62-01de-4e7e-91a6-bc7c2fdf59b5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Unauthorized (401)",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "fa4bd683200d574c4a959bedbd360465",
          "id": "4fdb1aa2-23ea-4269-a15f-87e72658c9c5",
          "timestamp": 1761682620580,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "926969e4-efd4-433c-9df1-841b389225ae",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                  ""
                ],
                "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f378b41a-b0e8-48f2-ad81-8c2b37d21a93",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647a6b62-01de-4e7e-91a6-bc7c2fdf59b5",
          "scriptId": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
          "execution": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "\"undefined\" is not valid JSON",
          "checksum": "4db15f4d7d3ae61b799898db95379b99",
          "id": "3a650b46-d288-458a-af3d-12faab43e130",
          "timestamp": 1761682620582,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "926969e4-efd4-433c-9df1-841b389225ae",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  "const j = pm.response.json();\r",
                  "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                  ""
                ],
                "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f378b41a-b0e8-48f2-ad81-8c2b37d21a93",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "647a6b62-01de-4e7e-91a6-bc7c2fdf59b5",
          "scriptId": "8898e2b2-5db9-491a-b066-ae08ee2e12a4"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///api/v1/articles\"",
          "stack": "Error: Invalid URI \"http:///api/v1/articles\"\n    at Request.init (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:356:31)\n    at new Request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js:183:8)\n    at request (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js:47:10)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:84:23\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:473:16\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5329:29)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setCertificate (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:50:20)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:79:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at next (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5331:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:969:16\n    at setProxy (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:31:9)\n    at D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js:76:13\n    at nextTask (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5324:14)\n    at Object.waterfall (D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:5334:5)",
          "checksum": "94d1d8fc2a13759def99233cc88e6397",
          "id": "3664fa14-8bcb-45ef-a397-eadaa9c32815",
          "timestamp": 1761682620615,
          "stacktrace": [
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 356,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\request.js",
              "lineNumber": 183,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\postman-request\\index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 84,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 50,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 79,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 31,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\lib\\requester\\request-wrapper.js",
              "lineNumber": 76,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "D:\\rubyOnRails\\blog_api\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  ""
                ],
                "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4490854a-db3e-426a-a70e-7dcb23467637",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bb47000c-9f57-4336-be3a-1838f7964736"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Unauthorized (401)",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "114a3fd071f46a1603a9876b41eb490f",
          "id": "cdb78d2c-3881-498e-bf3b-a454ce9afd68",
          "timestamp": 1761682620637,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
          "name": "New Request",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "articles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                  ""
                ],
                "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "exporter_id": "49430881",
            "collection_link": "https://montaserissa20-6342022.postman.co/workspace/Elmontaser-Bellah-Ahmed-AlI-Iss~114b946b-b7a0-4fe0-8ba9-6ab9738428f8/collection/49430881-fcb98d00-baeb-441e-a2a7-e465615cbb2f?action=share&source=collection_link&creator=49430881"
          },
          "item": [
            {
              "id": "30faf5b8-c91c-4295-85fa-19cc9dd7cc74",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "3000",
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "127",
                    "0",
                    "0",
                    "1"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6cc43d0b-efba-4736-abfc-9bc6e90480d6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "\r",
                      "const json = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Token present\", () => {\r",
                      "  pm.expect(json.token).to.be.a(\"string\").and.to.have.length.greaterThan(10);\r",
                      "});\r",
                      "\r",
                      "// Save token for other requests\r",
                      "pm.environment.set(\"token\", json.token);\r",
                      "\r",
                      "// Optional performance check\r",
                      "pm.test(\"Response < 800ms\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "8469f98a-512e-4f35-a7fc-86e20ca6d1e6"
                  }
                }
              ]
            },
            {
              "id": "00028583-ebda-4762-91ad-6f94b83c2f1c",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1065e16-20a9-4d26-9382-aa5ab9f7aee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r",
                      "const body = pm.response.json();\r",
                      "pm.test(\"Returns array or object\", () => pm.expect(body).to.exist);\r",
                      "pm.test(\"Fast enough\", () => pm.expect(pm.response.responseTime).to.be.below(800));\r",
                      ""
                    ],
                    "_lastExecutionId": "ea2d5d4e-6a04-4b0b-b600-6a73d66d7a12"
                  }
                }
              ]
            },
            {
              "id": "5f511c94-6fe7-45b9-9411-d82cd3f9dc0b",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"article\": { \"title\": \"Test from Postman\", \"body\": \"Hello from Postman\" }\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b6bef938-0829-4b38-a834-a7503d26bdec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Created (201) or OK (200)\", () => {\r",
                      "  pm.expect([200,201]).to.include(pm.response.code);\r",
                      "});\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has id & title\", () => {\r",
                      "  pm.expect(j.id || (j.article && j.article.id)).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f11d5598-b6ea-449a-9925-ca5aef880068"
                  }
                }
              ]
            },
            {
              "id": "926969e4-efd4-433c-9df1-841b389225ae",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8898e2b2-5db9-491a-b066-ae08ee2e12a4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      "const j = pm.response.json();\r",
                      "pm.test(\"Has error message\", () => pm.expect(j.error).to.exist);\r",
                      ""
                    ],
                    "_lastExecutionId": "49b7b9fc-cb67-4eee-b54e-694745c2aca3"
                  }
                }
              ]
            },
            {
              "id": "b7175de8-8647-45b1-8571-c2e0c0bae639",
              "name": "New Request",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "articles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Unauthorized (401)\", () => pm.response.to.have.status(401));\r",
                      ""
                    ],
                    "_lastExecutionId": "aec64dd3-d1ec-4514-a436-dc30f515d465"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{token}}",
                "key": "token"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "501a2ffc-2706-4609-9f21-c5779d98ee65",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "287df3b8-6889-4623-8031-cec76304f2e3"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1f86e714-6781-4bf9-8270-f27719e4c17f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c5d47d42-cb37-4a63-a4c4-317bc5135a18"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "fcb98d00-baeb-441e-a2a7-e465615cbb2f",
            "name": "Rails API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4490854a-db3e-426a-a70e-7dcb23467637",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bb47000c-9f57-4336-be3a-1838f7964736",
          "scriptId": "3f15fcee-098b-46df-986d-89e7b4b7ab21",
          "execution": "aec64dd3-d1ec-4514-a436-dc30f515d465"
        }
      }
    ],
    "error": null
  }
}